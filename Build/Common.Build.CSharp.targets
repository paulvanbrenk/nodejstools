<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />

  <!-- This property may have been set by the project. -->
  <PropertyGroup Condition="$(SuppressCommonAssemblyVersion)">
    <DefineConstants>$(DefineConstants);SUPPRESS_COMMON_ASSEMBLY_VERSION</DefineConstants>
  </PropertyGroup>

  <!--
  Returns the paths and names required for generating a vsixmanifest file.
  The default targets for this occasionally return the wrong files depending
  on some internal ordering.
  -->
  <Target Name="_GetTargetPath" Returns="@(_ResolvedReference1)">
    <ItemGroup>
      <_ResolvedReference1 Include="$(TargetPath)" />
    </ItemGroup>
  </Target>
  <Target Name="_GetAssemblyName" Returns="@(_ResolvedReference2)">
    <ItemGroup>
      <_ResolvedReference2 Include="$(TargetPath)">
        <UseAssemblyName>true</UseAssemblyName>
      </_ResolvedReference2>
    </ItemGroup>
  </Target>

  <!--
  Transforms our ConditionalEmbeddedResource into EmbeddedResource item
  groups with textual replacements in the .resx file.

  Currently the search and replace just updates the VS target version and
  the build root.
    -->
  <Target Name="ConditionalResx"
          BeforeTargets="MainResourcesGeneration"
          Inputs="@(ConditionalEmbeddedResource)"
          Outputs="@(ConditionalEmbeddedResource->'$(IntermediateOutputPath)_xf_%(Filename).resx')">
    <WriteLinesToFile
      File="@(ConditionalEmbeddedResource->'$(IntermediateOutputPath)_xf_%(Filename).resx')"
      Lines="$([System.IO.File]::ReadAllText(`%(FullPath)`).Replace(`_VSVERSION_`,`$(VSTarget)`).Replace(`_BUILDROOT_`, `$(BuildRoot)`))"
      Overwrite="true"/>

    <Message Text="Written to @(ConditionalEmbeddedResource->'$(IntermediateOutputPath)_xf_%(Filename).resx')" Importance="normal" />

    <ItemGroup>
      <FileWrites Include="@(ConditionalEmbeddedResource->'$(IntermediateOutputPath)_xf_%(Filename).resx')" />
      <EmbeddedResource Include="@(ConditionalEmbeddedResource->'$(IntermediateOutputPath)_xf_%(Filename).resx')">
        <ManifestResourceName>%(ConditionalEmbeddedResource.ManifestResourceName)</ManifestResourceName>
        <MergeWithCTO Condition="'%(ConditionalEmbeddedResource.MergeWithCTO)' != ''">%(ConditionalEmbeddedResource.MergeWithCTO)</MergeWithCTO>
        <LastGenOutput Condition="'%(ConditionalEmbeddedResource.LastGenOutput)' != ''">%(ConditionalEmbeddedResource.LastGenOutput)</LastGenOutput>
        <Generator Condition="'%(ConditionalEmbeddedResource.Generator)' != ''">%(ConditionalEmbeddedResource.Generator)</Generator>
        <LogicalName Condition="'%(ConditionalEmbeddedResource.LogicalName)' != ''">%(ConditionalEmbeddedResource.LogicalName)</LogicalName>
      </EmbeddedResource>
    </ItemGroup>
  </Target>
</Project>
